map "http://fhir.org/guides/who/smart-immunization/StructureMap/IMMZ-C-QRToPatient" = "IMMZ-C-QRToPatient"

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse" alias QResp as source
uses "http://fhir.org/guides/who/smart-immunization/StructureDefinition/IMMZ-C-register-client" alias IMMZC as produced
uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as target


group QRestToIMMZC (
  source qr : QResp,
  target patient: Patient
) {
  qr -> create("http://fhir.org/guides/who/smart-immunization/StructureDefinition/IMMZ-C-register-client") as model 
  then{
    qr -> model then QRespToIMMZC( qr, model) "QRtoLM";
    qr -> patient then IMMZCToPatient( model, patient ) "LMtoPatient";
  } "QRtoPatient";
}


group QRespToIMMZC (
  source qr : QResp,
  target immzc : IMMZC
) {
  qr.item as item then {

    item.answer first as answer where item.linkId = 'uniqueId' then {
      answer.value as content -> immzc.uniqueId = content  "set identifier";
    } "first answer for identifier";

    item as name where item.linkId = 'name' then NameToIMMZC( name, immzc ) "set names";

    item.answer first as answer where item.linkId = 'sex' then {
      answer.value as coding then {
        coding.code as content -> immzc.sex = content "set sex";
      } "process coding";
    } "first answer for identifier";
  
    item.answer first as answer where item.linkId = 'birthDate' then {
      answer.value as content -> immzc.birthDate = content "set birthDate";
    } "first answer for birthDate";

    item.answer first as answer where item.linkId = 'ageInWeeks' then {
      answer.value as content -> immzc.ageInWeeks = content "set ageInWeeks";
    } "first answer for ageInWeeks";

    item.answer first as answer where item.linkId = 'ageInMonths' then {
      answer.value as content -> immzc.ageInMonths = content "set ageInMonths";
    } "first answer for ageInMonths";

    item.answer first as answer where item.linkId = 'ageInYears' then {
      answer.value as content -> immzc.ageInYears = content "set ageInYears";
    } "first answer for ageInYears";

    item as caregiver where item.linkId = 'caregiver' -> immzc.caregiver as caretgt 
      then NameToIMMZC( caregiver, caretgt ) "set caregiver";

    item.answer first as answer where item.linkId = 'phone' then {
       answer.value as content -> immzc.phone = content  "set phone";
     } "first answer for phone";

    /*
    item.answer first as answer where item.linkId = 'administrativeArea' then {
      answer.value as coding -> immzc.administrativeArea as area then {
        coding -> area.coding = coding "set coding value";
        coding.display as display -> area.text = display "set display";
      } "set coding";
    } "first answer for administrativeArea";
    */
    item.answer first as answer where item.linkId = 'healthWorker' then {
      answer.value as content -> immzc.healthWorker = content  "set healthWorker";
    } "first answer for healthWorker";

  } "process items";

}

group NameToIMMZC( 
  source name,
  target immzc
) {
  name.item as item then {

    item.answer first as answer where item.linkId = 'fullName' then {
      answer.value as content -> immzc.name = content "set full name";
    } "first answer for full name";

    item.answer first as answer where item.linkId = 'firstName' then {
      answer.value as content -> immzc.firstName = content "set first name";
    } "first answer for first name";

    item.answer first as answer where item.linkId = 'familyName' then {
      answer.value as content -> immzc.familyName = content "set family name";
    } "first answer for family name";

  } "process name items";
}

group IMMZCToPatient (
  source immzc : IMMZC,
  target patient: Patient
) {

  immzc.uniqueId as id -> patient.identifier as identifier then {
    id -> identifier.value = id "set identifier value";
  } "set identifier";
  
  immzc -> patient.name as pname then NameToHumanName( immzc, pname ) "set name";

  /*
    immzc.sex as sex -> patient.gender = translate(sex, 'http://fhir.org/guides/who/smart-immunization/ConceptMap/IMMZ.C.SexToAdministrativeGender', 'code') "set gender";
  */
  
  immzc.birthDate as birthDate -> patient.birthDate = birthDate "set birthDate";

  immzc.caregiver as caregiver -> patient.contact as contact, contact.name as hname 
    then NameToHumanName( caregiver, hname ) "set caregiver";

  immzc.phone as phone -> patient.telecom as telecom then {
    phone as content -> telecom.value = content, telecom.system = 'phone' "set phone value";
  } "set phone";

  immzc.administrativeArea as area -> patient.address as address then {
    area.coding first as coding -> address then {
      coding.code as content -> address.text = content "set address to code";
      coding.display as content -> address.text = content "set address to display";
    } "set address text";
  } "set administrativeArea";


}

group NameToHumanName (
  source name,
  target hname
) {
  name.name as fullName -> hname.text = fullName "set full name";
  name.firstName as firstName -> hname.given = firstName "set first name";
  name.familyName as familyName -> hname.family = familyName "set family name";
}